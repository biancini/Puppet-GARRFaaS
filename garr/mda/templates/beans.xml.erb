<?xml version="1.0" encoding="UTF-8"?>
<!--
    Common beans for this channel.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
    default-lazy-init="true"
    xmlns:c="http://www.springframework.org/schema/c"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

    <!--
        Import commonly used beans.
    -->
    <import resource="classpath:common-beans.xml"/>
    
    <bean id="entityArgv" class="java.lang.String">
	    <constructor-arg value="#{ systemProperties['metadataUrl'] }"/>
	</bean>
	
	<bean id="entityAggregate" parent="DOMResourceSourceStage"
	    p:id="entityAggregate">
	    <property name="DOMResource">
	        <bean class="net.shibboleth.utilities.java.support.httpclient.HttpResource">
	            <constructor-arg name="client" ref="httpClient"/>
	            <constructor-arg name="url"    ref="entityArgv"/>
	        </bean>
	    </property>
	</bean>
	
	<bean id="checkEntities" parent="CompositeStage"
	    p:id="checkEntities">
	    <property name="composedStages">
	        <list>
	            <ref bean="entityAggregate"/>
	
	            <!--
	                Check for fatal errors at the aggregate level:
	                    missing or expired validUntil attribute
	                    invalid signature
	            -->
	            <ref bean="check_validUntil"/>
	            <!--ref bean="it_idem_checkSignature"/-->
	            <ref bean="errorTerminatingFilter"/>
	
	            <ref bean="disassemble"/>
	        </list>
	    </property>
	</bean>
	    
    <%= scope.function_template(["mda/beans_production.xml.erb"]) -%>
    
    <%= scope.function_template(["mda/beans_test.xml.erb"]) -%>
    
    <%= scope.function_template(["mda/beans_edugain.xml.erb"]) -%>

    <bean id="<%= fedcountry_downcase %>_<%= fedid_downcase %>_metadataXSL" class="net.shibboleth.utilities.java.support.resource.FilesystemResource">
        <constructor-arg value="#{ systemProperties['basedir'] }/mdx/<%= fedcountry_downcase %>_<%= fedid_downcase %>/xsl/my-fed.xsl" />
    </bean>

    <bean id="<%= fedcountry_downcase %>_<%= fedid_downcase %>_edugainXSL" class="net.shibboleth.utilities.java.support.resource.FilesystemResource">
        <constructor-arg value="#{ systemProperties['basedir'] }/mdx/<%= fedcountry_downcase %>_<%= fedid_downcase %>/xsl/remove<%= federation_id %>EntityFromEdugainMetadata.xsl" />
    </bean>

    <bean id="xslTransformationAddRootIDAttribute" class="java.lang.String">
        <constructor-arg value="#{ systemProperties['basedir'] }/mdx/<%= fedcountry_downcase %>_<%= fedid_downcase %>/xsl/add-root-id-attribute.xsl" />
    </bean>

<%- if use_ca -%>
    <!-- X509Certificate inside the Signature -->
    <bean id="<%= fedcountry_downcase %>_<%= fedid_downcase %>_signingKeyFile" class="java.io.File">
        <constructor-arg value="#{ systemProperties['basedir'] }/mdx/<%= fedcountry_downcase %>_<%= fedid_downcase %>/credentials/<%= fedid_downcase %>-signer.key"/>
    </bean>

    <bean id="<%= fedcountry_downcase %>_<%= fedid_downcase %>_signingCertificate" class="net.shibboleth.ext.spring.factory.X509CertificateFactoryBean">
        <property name="certificateFile">
            <bean class="java.io.File">
                <constructor-arg value="#{ systemProperties['basedir'] }/mdx/<%= fedcountry_downcase %>_<%= fedid_downcase %>/credentials/signer-bundle.pem"/>
            </bean>
        </property>
    </bean>

    <bean id="<%= fedcountry_downcase %>_<%= fedid_downcase %>_CAcertificate" class="net.shibboleth.ext.spring.factory.X509CertificateFactoryBean">
        <property name="certificateFile">
            <bean class="java.io.File">
                <constructor-arg value="#{ systemProperties['basedir'] }/mdx/<%= fedcountry_downcase %>_<%= fedid_downcase %>/credentials/CA-cert.pem"/>
            </bean>
        </property>
    </bean>
<%- else -%>
    <!-- End list of X509Certificate inside the Signature -->

    <!-- Certificato e Chiave self signed con cui firmare i metadati in SHA256 -->
    <bean id="<%= fedcountry_downcase %>_<%= fedid_downcase %>_selfSigningKeyFile" class="java.io.File">
        <constructor-arg value="#{ systemProperties['basedir'] }/mdx/<%= fedcountry_downcase %>_<%= fedid_downcase %>/credentials/<%= fedid_downcase %>-selfSigned-key.pem"/>
    </bean>

    <bean id="<%= fedcountry_downcase %>_<%= fedid_downcase %>_selfSigningCertificate" class="net.shibboleth.ext.spring.factory.X509CertificateFactoryBean">
        <property name="certificateFile">
            <bean class="java.io.File">
                <constructor-arg value="#{ systemProperties['basedir'] }/mdx/<%= fedcountry_downcase %>_<%= fedid_downcase %>/credentials/<%= fedid_downcase %>-selfSigned-cert.pem"/>
            </bean>
        </property>
    </bean>
<%- end -%>

    <!-- Questo Stage firma i metadati in SHA1 con la chiave indicata dal bean "<%= fedcountry_downcase %>_<%= fedid_downcase %><%- if use_ca-%>_signingKeyFile<%- else -%>_selfSigningKeyFile<%- end -%><%- if use_ca -%> e vi aggiunge i certificati indicati dai beans "<%= fedcountry_downcase %>_<%= fedid_downcase %>_signingCertificate" e "<%= fedcountry_downcase %>_<%= fedid_downcase %>_CAcertificate"<%- else -%><%- end -%> -->
    <bean id="<%= fedcountry_downcase %>_<%= fedid_downcase %>_signSHA1" class="net.shibboleth.metadata.dom.XMLSignatureSigningStage"
        p:id="<%= fedcountry_downcase %>_<%= fedid_downcase %>_signSHA1">
        <property name="privateKey">
<%- if use_ca -%>
            <bean class="net.shibboleth.ext.spring.factory.PrivateKeyFactoryBean" 
                  p:privateKeyFile-ref="<%= fedcountry_downcase %>_<%= fedid_downcase %>_signingKeyFile" />
<%- else -%>
            <bean class="net.shibboleth.ext.spring.factory.PrivateKeyFactoryBean" 
                  p:privateKeyFile-ref="<%= fedcountry_downcase %>_<%= fedid_downcase %>_selfSigningKeyFile" />
<%- end -%>
        </property>
        <property name="c14nWithComments" value="true" />
        <property name="includeX509Certificates" value="true" />

        <property name="certificates">
          <list>
<%- if use_ca -%>
            <ref bean="<%= fedcountry_downcase %>_<%= fedid_downcase %>_signingCertificate" />
            <ref bean="<%= fedcountry_downcase %>_<%= fedid_downcase %>_CAcertificate"/>
<%- else -%>
            <ref bean="<%= fedcountry_downcase %>_<%= fedid_downcase %>_selfSigningCertificate" />
<%- end -%>
          </list>
        </property>
        <property name="shaVariant">
            <util:constant static-field="net.shibboleth.metadata.dom.XMLSignatureSigningStage.ShaVariant.SHA1"/>
        </property>
    </bean>

    <!-- Questo Stage firma i metadati in SHA256 con la chiave indicata dal bean "<%= fedcountry_downcase %>_<%= fedid_downcase %><%- if use_ca-%>_signingKeyFile<%- else -%>_selfSigningKeyFile<%- end -%><%- if use_ca -%> e vi aggiunge i certificati indicati dai beans "<%= fedcountry_downcase %>_<%= fedid_downcase %>_signingCertificate" e "<%= fedcountry_downcase %>_<%= fedid_downcase %>_CAcertificate"<%- else -%><%- end -%> -->
    <bean id="<%= fedcountry_downcase %>_<%= fedid_downcase %>_signSHA256" class="net.shibboleth.metadata.dom.XMLSignatureSigningStage"
        p:id="<%= fedcountry_downcase %>_<%= fedid_downcase %>_signSHA256">
        <property name="privateKey">
<%- if use_ca -%>
            <bean class="net.shibboleth.ext.spring.factory.PrivateKeyFactoryBean" 
                  p:privateKeyFile-ref="<%= fedcountry_downcase %>_<%= fedid_downcase %>_signingKeyFile" />
<%- else -%>
            <bean class="net.shibboleth.ext.spring.factory.PrivateKeyFactoryBean" 
                  p:privateKeyFile-ref="<%= fedcountry_downcase %>_<%= fedid_downcase %>_selfSigningKeyFile" />
<%- end -%>
        </property>
        <property name="c14nWithComments" value="true" />
        <property name="includeX509Certificates" value="true" />

        <property name="certificates">
          <list>
<%- if use_ca -%>
            <ref bean="<%= fedcountry_downcase %>_<%= fedid_downcase %>_signingCertificate" />
            <ref bean="<%= fedcountry_downcase %>_<%= fedid_downcase %>_CAcertificate"/>
<%- else -%>
            <ref bean="<%= fedcountry_downcase %>_<%= fedid_downcase %>_selfSigningCertificate" />
<%- end -%>
          </list>
        </property>
        <property name="shaVariant">
            <util:constant static-field="net.shibboleth.metadata.dom.XMLSignatureSigningStage.ShaVariant.SHA256"/>
        </property>
    </bean>

    <!-- Stage utilizzato per formattare l'XML dei metadati con lo stylesheet XSL "my-fed.xsl" indicato dal bean "<%= fedcountry_downcase %>_<%= fedid_downcase %>_metadataXSL" -->
    <bean id="<%= fedcountry_downcase %>_<%= fedid_downcase %>_formatMetadata" class="net.shibboleth.metadata.dom.MultiOutputXSLTransformationStage"
        p:id="<%= fedcountry_downcase %>_<%= fedid_downcase %>_formatMetadata">
        <property name="XSLResource" ref="<%= fedcountry_downcase %>_<%= fedid_downcase %>_metadataXSL"/>  
    </bean>

    <bean id="<%= fedcountry_downcase %>_<%= fedid_downcase %>_extractOnlyEdugainEntity" parent="stage_parent" 
        class="net.shibboleth.metadata.dom.MultiOutputXSLTransformationStage"
        p:id="<%= fedcountry_downcase %>_<%= fedid_downcase %>_extractOnlyEdugainEntity">
        <property name="XSLResource" ref="<%= fedcountry_downcase %>_<%= fedid_downcase %>_edugainXSL"/>
    </bean>

    <!--
        <%= fedcountry_downcase %>_<%= fedid_downcase %>_trustRootsDocument
        
        Questo Bean contiene i certificati aggiuntivi da porre nei metadati della federazione.
    -->
    <bean id="<%= fedcountry_downcase %>_<%= fedid_downcase %>_trustRootsDocument" class="net.shibboleth.ext.spring.factory.DomDocumentFactoryBean">
        <property name="parserPool" ref="parserPool"/>
        <property name="documentResource">
            <bean parent="FileSystemResource">
                <constructor-arg value="#{ systemProperties['basedir'] }/mdx/<%= fedcountry_downcase %>_<%= fedid_downcase %>/trust-roots.xml"/>
            </bean>
        </property>
    </bean>    
    
    <!--
        <%= fedcountry_downcase %>_<%= fedid_downcase %>_addTrustRoots
        
        Questo stage aggiunge i certificati contenuti in <%= fedcountry_downcase %>_<%= fedid_downcase %>_trustRootsDocument ai metadati
    -->
    <bean id="<%= fedcountry_downcase %>_<%= fedid_downcase %>_addTrustRoots" parent="XSLTransformationStage"
        p:id="<%= fedcountry_downcase %>_<%= fedid_downcase %>_addTrustRoots">
        <property name="XSLResource">
            <bean parent="ClassPathResource">
                <constructor-arg value="<%= fedcountry_downcase %>_<%= fedid_downcase %>/trust-roots.xsl"/>
            </bean>
        </property>
        <property name="transformParameters">
            <map>
                <entry key="trustRootsDocument" value-ref="<%= fedcountry_downcase %>_<%= fedid_downcase %>_trustRootsDocument"/>
            </map>
        </property>
    </bean>
    
    <!--
        Check signing signature.
    -->
    <bean id="<%= fedcountry_downcase %>_<%= fedid_downcase %>_checkSignature" parent="XMLSignatureValidationStage"
        p:id="<%= fedcountry_downcase %>_<%= fedid_downcase %>_checkSignature">
        <property name="verificationCertificate" ref="<%= fedcountry_downcase %>_<%= fedid_downcase %>_signingCertificate"/>
        <property name="permittingEmptyReferences" value="true"/>
    </bean>
   
    <!--
        Select primary export aggregate.
    -->
    <alias alias="<%= fedcountry_downcase %>_<%= fedid_downcase %>_exportedAggregate" name="<%= fedcountry_downcase %>_<%= fedid_downcase %>_edugainAggregate"/>
    <alias alias="<%= fedcountry_downcase %>_<%= fedid_downcase %>_exportedEntities"  name="<%= fedcountry_downcase %>_<%= fedid_downcase %>_edugainEntities"/>
</beans>
